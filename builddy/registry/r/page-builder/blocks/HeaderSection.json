{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "HeaderSection",
  "type": "registry:block",
  "description": "",
  "dependencies": [
    "lucide-react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "builddy/blocks/defcon/HeaderSection.tsx",
      "content": "import { Clock, Archive, TrendingUp, ChevronDown } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\ninterface HeaderSectionProps {\r\n  content: {\r\n    timestamps: {\r\n      lastUpdate: string;\r\n      nextUpdate: string;\r\n    };\r\n    monitoring: {\r\n      count: number;\r\n      status: \"operational\" | \"degraded\" | \"critical\";\r\n    };\r\n    buttons: Array<{\r\n      id: string;\r\n      text: string;\r\n      shortText: string;\r\n      icon: \"history\" | \"metrics\";\r\n    }>;\r\n  };\r\n}\r\n\r\nexport default function HeaderSection({ content }: HeaderSectionProps) {\r\n  const { timestamps, monitoring, buttons } = content;\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case \"operational\":\r\n        return \"text-green-500\";\r\n      case \"degraded\":\r\n        return \"text-yellow-500\";\r\n      case \"critical\":\r\n        return \"text-red-500\";\r\n      default:\r\n        return \"text-muted-foreground\";\r\n    }\r\n  };\r\n\r\n  const getButtonStyle = (type: string) => {\r\n    switch (type) {\r\n      case \"history\":\r\n        return \"bg-blue-500/10 border-blue-500 text-blue-500 hover:bg-blue-500/20 defcon-theme-transition\";\r\n      case \"metrics\":\r\n        return \"bg-cyan-500/10 border-cyan-500 text-cyan-500 hover:bg-cyan-500/20 defcon-theme-transition\";\r\n      default:\r\n        return \"bg-muted border-border text-muted-foreground hover:bg-muted/80 defcon-theme-transition\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-card border-b border-border px-3 sm:px-6 py-2 defcon-theme-transition\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between text-xs gap-2 sm:gap-0\">\r\n        <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <Clock className=\"w-3 h-3 text-green-500 flex-shrink-0\" />\r\n            <span className=\"text-muted-foreground text-xs\">LAST UPDATE: {timestamps.lastUpdate}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 text-xs\">\r\n            <Clock className=\"w-3 h-3 text-yellow-500 flex-shrink-0\" />\r\n            <span className=\"text-muted-foreground\">NEXT UPDATE: {timestamps.nextUpdate}</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2 text-xs\">\r\n            <span className=\"w-2 h-2 rounded-full flex-shrink-0 bg-yellow-500 animate-pulse\"></span>\r\n            <span className=\"text-muted-foreground\">{monitoring.count} SERVERS MONITORED</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-wrap sm:flex-nowrap items-center gap-2 sm:gap-4\">\r\n          {buttons.map((button) => (\r\n            <Button\r\n              key={button.id}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              className={`flex items-center gap-1 px-2 sm:px-3 py-1 font-mono text-xs defcon-focus ${getButtonStyle(button.icon)}`}\r\n            >\r\n              {button.icon === \"history\" ? <Archive className=\"w-3 h-3\" /> : <TrendingUp className=\"w-3 h-3\" />}\r\n              <span className=\"hidden sm:inline\">{button.text}</span>\r\n              <span className=\"sm:hidden\">{button.shortText}</span>\r\n              <ChevronDown className=\"w-2.5 h-2.5\" />\r\n            </Button>\r\n          ))}\r\n          <div className=\"flex items-center gap-2 text-xs\">\r\n            <span className=\"text-muted-foreground hidden sm:inline\">STATUS:</span>\r\n            <span className={getStatusColor(monitoring.status)}>\r\n              {monitoring.status.toUpperCase()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const headerSectionTemplate = {\r\n  id: \"defconHeaderSection\",\r\n  name: \"Server Monitoring Header\",\r\n  description: \"A header section displaying server monitoring status and controls\",\r\n  component: HeaderSection,\r\n  defaultContent: {\r\n    timestamps: {\r\n      lastUpdate: \"2024-03-20T10:30:00Z\",\r\n      nextUpdate: \"2024-03-20T10:35:00Z\"\r\n    },\r\n    monitoring: {\r\n      count: 12,\r\n      status: \"operational\"\r\n    },\r\n    buttons: [\r\n      {\r\n        id: \"history\",\r\n        text: \"HISTORY\",\r\n        shortText: \"HIST\",\r\n        icon: \"history\"\r\n      },\r\n      {\r\n        id: \"metrics\",\r\n        text: \"METRICS\",\r\n        shortText: \"MTR\",\r\n        icon: \"metrics\"\r\n      }\r\n    ]\r\n  }\r\n}; ",
      "target": "blocks"
    }
  ]
}