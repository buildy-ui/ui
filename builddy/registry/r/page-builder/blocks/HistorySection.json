{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "HistorySection",
  "type": "registry:block",
  "description": "",
  "dependencies": [
    "react",
    "lucide-react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "builddy/blocks/defcon/HistorySection.tsx",
      "content": "import React from \"react\";\r\nimport { Archive } from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\n\r\ninterface TimelineEvent {\r\n  id: string;\r\n  date: string;\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n  color: \"red\" | \"yellow\" | \"green\" | \"purple\" | \"emerald\";\r\n  details: Array<{\r\n    type: \"quote\" | \"stat\" | \"image\";\r\n    content: string;\r\n    source?: string;\r\n  }>;\r\n}\r\n\r\ninterface HistorySectionProps {\r\n  content: {\r\n    title: string;\r\n    subtitle: string;\r\n    returnButtonText: string;\r\n    timeline: {\r\n      periods: Array<{\r\n        year: string;\r\n        color: string;\r\n      }>;\r\n      events: TimelineEvent[];\r\n    };\r\n  };\r\n}\r\n\r\nexport default function HistorySection({ content }: HistorySectionProps) {\r\n  const { title, subtitle, returnButtonText, timeline } = content;\r\n\r\n  const getColorClasses = (color: string) => {\r\n    const baseClasses = {\r\n      red: \"bg-red-500/20 border-red-500 text-red-500\",\r\n      yellow: \"bg-yellow-500/20 border-yellow-500 text-yellow-500\",\r\n      green: \"bg-green-500/20 border-green-500 text-green-500\",\r\n      purple: \"bg-purple-500/20 border-purple-500 text-purple-500\",\r\n      emerald: \"bg-emerald-500/20 border-emerald-500 text-emerald-500\"\r\n    };\r\n    return baseClasses[color as keyof typeof baseClasses] || baseClasses.red;\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-t border-border bg-background defcon-theme-transition\">\r\n      <div className=\"container mx-auto px-4 sm:px-6 py-8 sm:py-12 lg:py-16\">\r\n        <div className=\"mb-8 sm:mb-12 text-center\">\r\n          <div className=\"flex items-center justify-center gap-2 sm:gap-3 mb-3 sm:mb-4\">\r\n            <Archive className=\"w-6 h-6 sm:w-8 sm:h-8 text-primary\" />\r\n            <h2 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold tracking-wider text-foreground\">\r\n              {title}\r\n            </h2>\r\n          </div>\r\n          <div className=\"w-16 sm:w-24 h-1 bg-primary mx-auto mb-3 sm:mb-4\"></div>\r\n          <p className=\"text-muted-foreground text-base sm:text-lg max-w-3xl mx-auto leading-relaxed px-4\">\r\n            {subtitle}\r\n          </p>\r\n          <button className=\"mt-3 sm:mt-4 text-primary hover:text-primary/80 text-sm flex items-center gap-1 mx-auto defcon-theme-transition defcon-focus\">\r\n            â†‘ {returnButtonText}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"space-y-6 sm:space-y-8\">\r\n          <div className=\"mb-6 sm:mb-8\">\r\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-center gap-3 sm:gap-4 text-xs text-muted-foreground\">\r\n              {timeline.periods.map((period, index) => (\r\n                <React.Fragment key={period.year}>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className={`w-3 h-3 ${getColorClasses(period.color)} rounded-full flex-shrink-0 defcon-theme-transition`}></div>\r\n                    <span className=\"font-mono\">{period.year}</span>\r\n                  </div>\r\n                  {index < timeline.periods.length - 1 && (\r\n                    <div className=\"hidden sm:block w-8 h-px bg-border\"></div>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {timeline.events.map((event) => (\r\n            <div key={event.id} className=\"bg-card/50 border border-border rounded-lg p-4 sm:p-6 lg:p-8 defcon-theme-transition\">\r\n              <div className=\"flex flex-col sm:flex-row sm:items-start gap-4 sm:gap-6\">\r\n                <div className={`${getColorClasses(event.color)} rounded-full p-3 sm:p-4 flex-shrink-0 self-start sm:mt-1 defcon-theme-transition`}>\r\n                  <span className=\"font-bold text-sm font-mono\">{event.date}</span>\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"space-y-4 sm:space-y-6\">\r\n                    <div>\r\n                      <h3 className={`text-xl sm:text-2xl lg:text-3xl font-bold ${getColorClasses(event.color)} mb-3 sm:mb-4 leading-tight`}>\r\n                        {event.title}\r\n                      </h3>\r\n                      <p className=\"text-muted-foreground text-sm sm:text-base lg:text-lg leading-relaxed mb-4\">\r\n                        {event.description}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"space-y-4\">\r\n                      {event.details.map((detail, index) => {\r\n                        if (detail.type === \"quote\") {\r\n                          return (\r\n                            <div key={index} className={`bg-secondary/20 border-l-4 ${getColorClasses(event.color)} pl-4 sm:pl-6 py-3 sm:py-4 rounded-r-lg defcon-theme-transition`}>\r\n                              <p className=\"italic text-sm sm:text-base leading-relaxed mb-2 text-card-foreground\">\r\n                                {detail.content}\r\n                              </p>\r\n                              {detail.source && (\r\n                                <div className=\"text-xs text-muted-foreground font-mono\">\r\n                                  {detail.source}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        }\r\n                        if (detail.type === \"stat\") {\r\n                          return (\r\n                            <div key={index} className=\"bg-secondary/20 border border-border rounded-lg p-3 sm:p-4 defcon-theme-transition\">\r\n                              <Badge variant=\"outline\" className={`${getColorClasses(event.color)} defcon-theme-transition`}>\r\n                                {detail.content}\r\n                              </Badge>\r\n                            </div>\r\n                          );\r\n                        }\r\n                        return null;\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const historySectionTemplate = {\r\n  id: \"defconHistorySection\",\r\n  name: \"Server History Timeline\",\r\n  description: \"A timeline section showing server monitoring history\",\r\n  component: HistorySection,\r\n  defaultContent: {\r\n    title: \"SERVER MONITORING HISTORY\",\r\n    subtitle: \"A comprehensive timeline of server performance, incidents, and system evolution.\",\r\n    returnButtonText: \"RETURN TO LIVE MONITORING\",\r\n    timeline: {\r\n      periods: [\r\n        { year: \"2023\", color: \"red\" },\r\n        { year: \"2024-Q1\", color: \"yellow\" },\r\n        { year: \"2024-Q2\", color: \"green\" },\r\n        { year: \"2024-Q3\", color: \"purple\" },\r\n        { year: \"2024-Q4\", color: \"emerald\" }\r\n      ],\r\n      events: [\r\n        {\r\n          id: \"event1\",\r\n          date: \"MAR '24\",\r\n          title: \"System Architecture Upgrade\",\r\n          description: \"Major infrastructure upgrade improving system reliability and performance.\",\r\n          icon: \"ðŸ”§\",\r\n          color: \"green\",\r\n          details: [\r\n            {\r\n              type: \"quote\",\r\n              content: \"99.99% uptime achieved after the migration to containerized infrastructure\",\r\n              source: \"System Metrics Report\"\r\n            },\r\n            {\r\n              type: \"stat\",\r\n              content: \"Response time reduced by 45%\"\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: \"event2\",\r\n          date: \"FEB '24\",\r\n          title: \"Security Protocol Enhancement\",\r\n          description: \"Implementation of advanced security measures and monitoring systems.\",\r\n          icon: \"ðŸ”’\",\r\n          color: \"purple\",\r\n          details: [\r\n            {\r\n              type: \"quote\",\r\n              content: \"Zero security incidents reported since implementation\",\r\n              source: \"Security Audit Log\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}; ",
      "target": "blocks"
    }
  ]
}