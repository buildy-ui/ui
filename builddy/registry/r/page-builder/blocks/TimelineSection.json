{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "TimelineSection",
  "type": "registry:block",
  "description": "",
  "dependencies": [
    "lucide-react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "builddy/blocks/defcon/TimelineSection.tsx",
      "content": "import { Clock, AlertTriangle, CheckCircle2, XCircle } from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\n\r\ninterface TimelineEvent {\r\n  id: string;\r\n  timestamp: string;\r\n  title: string;\r\n  description: string;\r\n  type: \"info\" | \"warning\" | \"success\" | \"error\";\r\n  metrics?: Array<{\r\n    label: string;\r\n    value: string;\r\n  }>;\r\n}\r\n\r\ninterface TimelineSectionProps {\r\n  content: {\r\n    events: TimelineEvent[];\r\n  };\r\n}\r\n\r\nexport default function TimelineSection({ content }: TimelineSectionProps) {\r\n  const { events } = content;\r\n\r\n  const getEventIcon = (type: string) => {\r\n    switch (type) {\r\n      case \"warning\":\r\n        return <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />;\r\n      case \"success\":\r\n        return <CheckCircle2 className=\"w-4 h-4 text-green-500\" />;\r\n      case \"error\":\r\n        return <XCircle className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <Clock className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  const getEventColor = (type: string) => {\r\n    switch (type) {\r\n      case \"warning\":\r\n        return \"defcon-status-degraded\";\r\n      case \"success\":\r\n        return \"defcon-status-online\";\r\n      case \"error\":\r\n        return \"defcon-status-offline\";\r\n      default:\r\n        return \"bg-blue-500/10 border-blue-500 text-blue-500\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-t border-border bg-background defcon-theme-transition\">\r\n      <div className=\"container mx-auto px-4 sm:px-6 py-8\">\r\n        <div className=\"space-y-4\">\r\n          {events.map((event) => (\r\n            <div\r\n              key={event.id}\r\n              className={`p-4 rounded-lg border defcon-theme-transition ${getEventColor(event.type)}`}\r\n            >\r\n              <div className=\"flex items-start gap-3\">\r\n                <div className=\"mt-1\">{getEventIcon(event.type)}</div>\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <h4 className=\"font-bold text-sm\">{event.title}</h4>\r\n                    <Badge variant=\"outline\" className=\"text-xs defcon-badge defcon-theme-transition\">\r\n                      {event.timestamp}\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"text-sm mb-3\">{event.description}</p>\r\n                  {event.metrics && (\r\n                    <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3\">\r\n                      {event.metrics.map((metric, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"bg-secondary/30 p-2 rounded border border-border defcon-theme-transition\"\r\n                        >\r\n                          <div className=\"text-xs text-muted-foreground mb-1\">\r\n                            {metric.label}\r\n                          </div>\r\n                          <div className=\"font-mono text-sm text-foreground\">{metric.value}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const timelineSectionTemplate = {\r\n  id: \"defconTimelineSection\",\r\n  name: \"Server Event Timeline\",\r\n  description: \"A timeline of server events and incidents\",\r\n  component: TimelineSection,\r\n  defaultContent: {\r\n    events: [\r\n      {\r\n        id: \"event1\",\r\n        timestamp: \"2024-03-20 10:45:00\",\r\n        title: \"High CPU Usage Alert\",\r\n        description: \"CPU usage exceeded 90% threshold on production server\",\r\n        type: \"warning\",\r\n        metrics: [\r\n          {\r\n            label: \"CPU Usage\",\r\n            value: \"92%\"\r\n          },\r\n          {\r\n            label: \"Process Count\",\r\n            value: \"234\"\r\n          },\r\n          {\r\n            label: \"Load Average\",\r\n            value: \"4.52\"\r\n          },\r\n          {\r\n            label: \"Duration\",\r\n            value: \"5m 30s\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: \"event2\",\r\n        timestamp: \"2024-03-20 10:30:00\",\r\n        title: \"Backup Completed\",\r\n        description: \"Daily backup completed successfully\",\r\n        type: \"success\",\r\n        metrics: [\r\n          {\r\n            label: \"Size\",\r\n            value: \"42.5 GB\"\r\n          },\r\n          {\r\n            label: \"Duration\",\r\n            value: \"12m 15s\"\r\n          },\r\n          {\r\n            label: \"Files\",\r\n            value: \"12,453\"\r\n          },\r\n          {\r\n            label: \"Speed\",\r\n            value: \"58 MB/s\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: \"event3\",\r\n        timestamp: \"2024-03-20 10:15:00\",\r\n        title: \"Service Restart\",\r\n        description: \"Nginx service restarted due to configuration update\",\r\n        type: \"info\",\r\n        metrics: [\r\n          {\r\n            label: \"Downtime\",\r\n            value: \"3s\"\r\n          },\r\n          {\r\n            label: \"Connections\",\r\n            value: \"1,234\"\r\n          },\r\n          {\r\n            label: \"Workers\",\r\n            value: \"8\"\r\n          },\r\n          {\r\n            label: \"Cache Hit\",\r\n            value: \"94.5%\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}; ",
      "target": "blocks"
    }
  ]
}