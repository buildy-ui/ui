{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "nav",
  "type": "registry:component",
  "description": "CSS-only Navigation component with responsive design\n * \n * No external JavaScript dependencies or runtime requirements.\n * Works with server-side rendering (SSR) and static site generation (SSG).\n * \n * Required Tailwind CSS:\n * ```css\n * @layer components {\n *  \n *   .peer:checked ~[data - slot=\"nav-mobile\"] {\n * @apply opacity - 100 visible translate - y - 0;\n *   }\n * \n *   \n *   .group: target[data - slot= \"nav-dropdown-content\"] {\n * @apply opacity - 100 visible scale - 100;\n *   }\n * \n *  \n * details[data - slot=\"nav-mobile-dropdown\"][open] summary {\n * @apply bg - accent text - accent - foreground;\n *   }\n * }\n * ```\n * \n * Key features:\n * - Pure CSS dropdowns using :target selector\n * - Checkbox-based mobile menu\n * - Auto-closing mobile menu when clicking outside\n * - Accessible keyboard navigation\n * \n * Usage example:\n * \n  * <NavLayout>\n    *   <NavBar>\n      *     <h2>Logo</h2>\n      *\n      *   \n      *     <Nav>\n        *       <NavList>\n          *         <NavItem>\n            *           <NavLink href=\"/\" active>Home</NavLink>\n            *         </NavItem>\n          *         <NavItem>\n            *           <NavDropdown id=\"products-dropdown\" title=\"Products\">\n              *             <NavDropdownItem href=\"/products/web\">Web</NavDropdownItem>\n              *             <NavDropdownItem href=\"/products/mobile\">Mobile</NavDropdownItem>\n              *           </NavDropdown>\n            *         </NavItem>\n          *       </NavList>\n        *     </Nav>\n      *\n      *    \n      *     <NavTrigger />\n      *   </NavBar>\n    *\n    *  \n    *   <NavMobile>\n      *     <NavMobileList>\n        *       <NavMobileItem>\n          *         <NavMobileLink href=\"/\" active>Home</NavMobileLink>\n          *       </NavMobileItem>\n        *       <NavMobileItem>\n          *         <NavMobileDropdown title=\"Products\">\n            *           <NavMobileDropdownItem href=\"/products/web\">Web</NavMobileDropdownItem>\n            *           <NavMobileDropdownItem href=\"/products/mobile\">Mobile</NavMobileDropdownItem>\n            *         </NavMobileDropdown>\n          *       </NavMobileItem>\n        *     </NavMobileList>\n      *   </NavMobile>\n    * </NavLayout>\n  * ```",
  "dependencies": [
    "react",
    "lucide-react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "semantic/components/nav.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@ui8kit/core\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\n\n/**\n * CSS-only Navigation component with responsive design\n * \n * No external JavaScript dependencies or runtime requirements.\n * Works with server-side rendering (SSR) and static site generation (SSG).\n * \n * Required Tailwind CSS:\n * ```css\n * @layer components {\n *  \n *   .peer:checked ~[data - slot=\"nav-mobile\"] {\n * @apply opacity - 100 visible translate - y - 0;\n *   }\n * \n *   \n *   .group: target[data - slot= \"nav-dropdown-content\"] {\n * @apply opacity - 100 visible scale - 100;\n *   }\n * \n *  \n * details[data - slot=\"nav-mobile-dropdown\"][open] summary {\n * @apply bg - accent text - accent - foreground;\n *   }\n * }\n * ```\n * \n * Key features:\n * - Pure CSS dropdowns using :target selector\n * - Checkbox-based mobile menu\n * - Auto-closing mobile menu when clicking outside\n * - Accessible keyboard navigation\n * \n * Usage example:\n * \n  * <NavLayout>\n    *   <NavBar>\n      *     <h2>Logo</h2>\n      *\n      *   \n      *     <Nav>\n        *       <NavList>\n          *         <NavItem>\n            *           <NavLink href=\"/\" active>Home</NavLink>\n            *         </NavItem>\n          *         <NavItem>\n            *           <NavDropdown id=\"products-dropdown\" title=\"Products\">\n              *             <NavDropdownItem href=\"/products/web\">Web</NavDropdownItem>\n              *             <NavDropdownItem href=\"/products/mobile\">Mobile</NavDropdownItem>\n              *           </NavDropdown>\n            *         </NavItem>\n          *       </NavList>\n        *     </Nav>\n      *\n      *    \n      *     <NavTrigger />\n      *   </NavBar>\n    *\n    *  \n    *   <NavMobile>\n      *     <NavMobileList>\n        *       <NavMobileItem>\n          *         <NavMobileLink href=\"/\" active>Home</NavMobileLink>\n          *       </NavMobileItem>\n        *       <NavMobileItem>\n          *         <NavMobileDropdown title=\"Products\">\n            *           <NavMobileDropdownItem href=\"/products/web\">Web</NavMobileDropdownItem>\n            *           <NavMobileDropdownItem href=\"/products/mobile\">Mobile</NavMobileDropdownItem>\n            *         </NavMobileDropdown>\n          *       </NavMobileItem>\n        *     </NavMobileList>\n      *   </NavMobile>\n    * </NavLayout>\n  * ```\n */\n\n// Main navigation container\nfunction Nav({ className, children, ...props }: React.ComponentProps<\"nav\">) {\n  return (\n    <nav\n\n      className={cn(\"nav\", className)}\n      {...props}>\n\n      {children}\n    </nav>);\n\n}\n\n// Layout for nav with checkbox for mobile menu\nfunction NavLayout({ className, children, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"nav-layout\", className)}\n      {...props}>\n\n      {/* Hidden checkbox for mobile menu toggle */}\n      <input\n        type=\"checkbox\"\n        id=\"nav-toggle\"\n        className=\"peer sr-only\"\n        aria-hidden=\"true\" />\n\n      {children}\n    </div>);\n\n}\n\n// Navigation bar wrapper\nfunction NavBar({ className, children, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"nav-bar\", className)}\n      {...props}>\n\n      <div className=\"container flex h-16 items-center justify-between px-4\">\n        {children}\n      </div>\n    </div>);\n\n}\n\n// Navigation list\nfunction NavList({ className, children, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n\n      className={cn(\"nav-list\", className)}\n      {...props}>\n\n      {children}\n    </ul>);\n\n}\n\n// Navigation item\nfunction NavItem({ className, children, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n\n      className={cn(\"nav-item\", className)}\n      {...props}>\n\n      {children}\n    </li>);\n\n}\n\n// Navigation link\nfunction NavLink({\n  className,\n  children,\n  active,\n  ...props\n}: React.ComponentProps<\"a\"> & {active?: boolean;}) {\n  return (\n    <a\n\n      data-active={active ? \"true\" : undefined}\n      className={cn(\"nav-link\", className)}\n      {...props}>\n\n      {children}\n    </a>);\n\n}\n\n// Dropdown navigation (CSS-only using details/summary)\nfunction NavDropdown({\n  className,\n  children,\n  title,\n  id,\n  ...props\n}: React.ComponentProps<\"details\"> & {title: string;id: string;}) {\n  return (\n    <details\n      id={id}\n\n      className={cn(\"nav-dropdown\", className)}\n      {...props}>\n\n      <summary\n        className={cn(\"inline-flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors hover:bg-accent hover:text-accent-foreground cursor-pointer list-none [&::-webkit-details-marker]:hidden [&[open]]:bg-accent [&[open]]:text-accent-foreground\")}>\n\n        {title}\n        <ChevronDown className={cn(\"ml-1 h-4 w-4 transition-transform duration-200 details-open:rotate-180\")} />\n      </summary>\n\n      {/* Dropdown content */}\n      <div\n\n        className={cn(\"nav-dropdown-content\")}>\n\n        <div className=\"py-1\">\n          {children}\n        </div>\n      </div>\n    </details>);\n\n}\n\n// Dropdown item\nfunction NavDropdownItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"a\">) {\n  return (\n    <a\n\n      className={cn(\"nav-dropdown-item\", className)}\n      {...props}>\n\n      {children}\n    </a>);\n\n}\n\n// Mobile menu trigger\nfunction NavTrigger({ className, ...props }: React.ComponentProps<\"label\">) {\n  return (\n    <label\n      htmlFor=\"nav-toggle\"\n\n      className={cn(\"nav-trigger\", className)}\n      aria-label=\"Toggle navigation menu\"\n      {...props}>\n\n      <Menu className=\"h-5 w-5\" />\n    </label>);\n\n}\n\n// Mobile navigation overlay\nfunction NavMobile({ className, children, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"nav-mobile\", className)}\n      {...props}>\n\n      {/* Backdrop */}\n      <div className=\"absolute inset-0 bg-black/50 backdrop-blur-sm\" />\n\n      {/* Mobile menu panel */}\n      <div className=\"relative bg-background border-b border-border shadow-lg\">\n        {/* Close button */}\n        <div className=\"flex items-center justify-between p-4 border-b border-border\">\n          <span className=\"text-lg font-semibold\">Menu</span>\n          <label\n            htmlFor=\"nav-toggle\"\n            className=\"p-2 rounded-md hover:bg-accent cursor-pointer\"\n            aria-label=\"Close menu\">\n\n            <X className=\"h-5 w-5\" />\n          </label>\n        </div>\n\n        {/* Mobile menu content */}\n        <div className=\"p-4\">\n          {children}\n        </div>\n      </div>\n    </div>);\n\n}\n\n// Mobile navigation list\nfunction NavMobileList({ className, children, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n\n      className={cn(\"nav-mobile-list\", className)}\n      {...props}>\n\n      {children}\n    </ul>);\n\n}\n\n// Mobile navigation item\nfunction NavMobileItem({ className, children, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n\n      className={cn(className)}\n      {...props}>\n\n      {children}\n    </li>);\n\n}\n\n// Mobile navigation link\nfunction NavMobileLink({\n  className,\n  children,\n  active,\n  href,\n  ...props\n}: React.ComponentProps<\"a\"> & {active?: boolean;}) {\n  return (\n    <a\n      href={href}\n\n      data-active={active ? \"true\" : undefined}\n      className={cn(\"nav-mobile-link\",\n\n      className\n\n      )}\n      {...props}>\n\n      {children}\n    </a>);\n\n}\n\n// Mobile dropdown item\nfunction NavMobileDropdownItem({\n  className,\n  children,\n  href,\n  ...props\n}: React.ComponentProps<\"a\">) {\n  return (\n    <a\n      href={href}\n\n      className={cn(\"nav-mobile-dropdown-item\",\n\n      className\n\n      )}\n      {...props}>\n\n      {children}\n    </a>);\n\n}\n\n// Mobile dropdown (CSS-only with details/summary)\nfunction NavMobileDropdown({\n  className,\n  children,\n  title,\n  ...props\n}: React.ComponentProps<\"details\"> & {title: string;}) {\n  return (\n    <details\n\n      className={cn(\"\", className)}\n      {...props}>\n\n      <summary\n        className={cn(\"flex items-center justify-between w-full px-3 py-3 text-base font-medium rounded-md hover:bg-accent hover:text-accent-foreground cursor-pointer list-none [&::-webkit-details-marker]:hidden [&[open]]:bg-accent [&[open]]:text-accent-foreground\")}>\n\n        {title}\n        <ChevronDown className={cn(\"h-4 w-4 transition-transform duration-200 group-open:rotate-180\")} />\n      </summary>\n      <div className=\"mt-1 ml-4 space-y-1\">\n        {children}\n      </div>\n    </details>);\n\n}\n\n// Navigation group for organizing links\nfunction NavGroup({\n  className,\n  children,\n  title,\n  ...props\n}: React.ComponentProps<\"div\"> & {title?: string;}) {\n  return (\n    <div\n\n      className={cn(\"nav-group\", className)}\n      {...props}>\n\n      {title &&\n      <h4 className=\"mb-2 px-3 text-sm font-semibold tracking-tight text-muted-foreground\">\n          {title}\n        </h4>\n      }\n      <div className=\"space-y-1\">\n        {children}\n      </div>\n    </div>);\n\n}\n\n// Navigation group buttons (e.g. for theme toggle)\nfunction NavGroupButtons({ className, children, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"nav-group-buttons\", className)}\n      {...props}>\n\n      {children}\n    </div>);\n\n}\n\nexport {\n  Nav,\n  NavBar,\n  NavList,\n  NavItem,\n  NavLink,\n  NavDropdown,\n  NavDropdownItem,\n  NavTrigger,\n  NavMobile,\n  NavMobileList,\n  NavMobileItem,\n  NavMobileLink,\n  NavMobileDropdownItem,\n  NavMobileDropdown,\n  NavGroup,\n  NavGroupButtons,\n  NavLayout };",
      "target": "components"
    }
  ]
}