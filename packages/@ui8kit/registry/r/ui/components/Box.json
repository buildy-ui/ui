{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "Box",
  "type": "registry:component",
  "description": "",
  "dependencies": [
    "react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "src/components/Box/Box.tsx",
      "content": "import type { ElementType, ReactNode } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport { cn } from \"../../core/utils\";\r\nimport { Box as BaseBox } from \"../../core/ui\";\r\nimport {\r\n  spacingVariants,\r\n  roundedVariants,\r\n  shadowVariants,\r\n  colorVariants,\r\n  layoutVariants,\r\n  borderVariants,\r\n  flexVariants,\r\n  aspectRatioVariants,\r\n  type VariantSpacingProps,\r\n  type RoundedProps,\r\n  type ShadowProps,\r\n  type ColorProps,\r\n  type VariantLayoutProps,\r\n  type BorderProps,\r\n  type VariantFlexProps,\r\n  type AspectRatioProps\r\n} from \"../../core/variants\";\r\n\r\nexport interface BoxProps \r\n  extends VariantSpacingProps,\r\n    RoundedProps,\r\n    ShadowProps,\r\n    ColorProps,\r\n    VariantLayoutProps,\r\n    BorderProps,\r\n    VariantFlexProps,\r\n    AspectRatioProps {\r\n  component?: ElementType;\r\n  className?: string;\r\n  children?: ReactNode;\r\n  [key: string]: any;\r\n}\r\n\r\nexport const Box = forwardRef<HTMLElement, BoxProps>(\r\n  ({ \r\n    component = \"div\",\r\n    className,\r\n    children,\r\n    // Spacing props\r\n    m, mx, my, mt, mr, mb, ml,\r\n    p, px, py, pt, pr, pb, pl,\r\n    // Rounded props\r\n    rounded,\r\n    // Shadow props\r\n    shadow,\r\n    // Color props\r\n    bg, c, borderColor,\r\n    // Layout props\r\n    display, maxW, w, h, minH, position, z, overflow,\r\n    // Border props\r\n    border, borderTop, borderBottom, borderLeft, borderRight,\r\n    // Flex props\r\n    direction, align, justify, wrap, gap,\r\n    // Aspect ratio props\r\n    aspect,\r\n    ...props \r\n  }, ref) => {\r\n    return (\r\n      <BaseBox\r\n        component={component}\r\n        ref={ref}\r\n        className={cn(\r\n          // Apply spacing variants\r\n          spacingVariants({\r\n            m, mx, my, mt, mr, mb, ml,\r\n            p, px, py, pt, pr, pb, pl\r\n          }),\r\n          // Apply rounded variants\r\n          roundedVariants({ rounded }),\r\n          // Apply shadow variants\r\n          shadowVariants({ shadow }),\r\n          // Apply color variants\r\n          colorVariants({ bg, c, borderColor }),\r\n          // Apply layout variants\r\n          layoutVariants({ display, maxW, w, h, minH, position, z, overflow }),\r\n          // Apply border variants\r\n          borderVariants({ border, borderTop, borderBottom, borderLeft, borderRight }),\r\n          // Apply flex variants\r\n          flexVariants({ direction, align, justify, wrap, gap }),\r\n          // Apply aspect ratio variants\r\n          aspectRatioVariants({ aspect }),\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </BaseBox>\r\n    );\r\n  }\r\n);\r\n\r\nBox.displayName = \"Box\";",
      "target": "components"
    }
  ]
}