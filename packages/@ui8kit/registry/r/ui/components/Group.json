{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "Group",
  "type": "registry:component",
  "description": "",
  "dependencies": [
    "react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "src/components/Group/Group.tsx",
      "content": "import type { ReactNode, ElementType } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport {\r\n  Flex,\r\n  spacingVariants,\r\n  colorVariants,\r\n  layoutVariants,\r\n  flexVariants,\r\n  type VariantSpacingProps,\r\n  type ColorProps,\r\n  type VariantLayoutProps,\r\n  type VariantFlexProps,\r\n  cn\r\n} from \"../../core\";\r\n\r\nexport interface GroupProps \r\n  extends React.HTMLAttributes<HTMLElement>,\r\n    Pick<VariantSpacingProps, 'p' | 'px' | 'py' | 'm' | 'mx' | 'my'>,\r\n    Pick<ColorProps, 'bg' | 'c'>,\r\n    Pick<VariantLayoutProps, 'w' | 'h'>,\r\n    Pick<VariantFlexProps, 'gap' | 'align' | 'justify' | 'wrap'> {\r\n  children: ReactNode;\r\n  component?: ElementType;\r\n  grow?: boolean;\r\n  preventGrowOverflow?: boolean;\r\n}\r\n\r\nexport const Group = forwardRef<HTMLElement, GroupProps>(\r\n  ({ \r\n    children, \r\n    className,\r\n    component = 'div',\r\n    gap = 'md',\r\n    align = 'center',\r\n    justify = 'start',\r\n    wrap = 'nowrap',\r\n    grow = false,\r\n    preventGrowOverflow = true,\r\n    // Spacing props\r\n    p, px, py,\r\n    m, mx, my,\r\n    // Color props\r\n    bg,\r\n    c,\r\n    // Layout props\r\n    w,\r\n    h,\r\n    ...props \r\n  }, ref) => {\r\n    return (\r\n      <Flex\r\n        ref={ref}\r\n        component={component}\r\n        data-class=\"group\"\r\n        className={cn(\r\n          // Apply CVA variants - Group is always flex-row\r\n          flexVariants({ gap, align, justify, wrap }),\r\n          spacingVariants({ p, px, py, m, mx, my }),\r\n          colorVariants({ bg, c }),\r\n          layoutVariants({ w, h }),\r\n          // Group specific styles\r\n          grow && 'flex-1',\r\n          preventGrowOverflow && 'min-w-0',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Flex>\r\n    );\r\n  }\r\n);\r\n\r\nGroup.displayName = \"Group\"; ",
      "target": "components"
    }
  ]
}