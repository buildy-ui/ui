{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "Icon",
  "type": "registry:component",
  "description": "",
  "dependencies": [
    "react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "src/components/Icon/Icon.tsx",
      "content": "import type { ReactNode, ElementType } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport {\r\n  Icon as BaseIcon,\r\n  spacingVariants,\r\n  colorVariants,\r\n  iconSizeVariants,\r\n  type VariantSpacingProps,\r\n  type ColorProps,\r\n  type IconSizingProps,\r\n  cn\r\n} from \"../../core\";\r\n\r\nexport interface IconProps \r\n  extends React.HTMLAttributes<HTMLElement>,\r\n    Pick<VariantSpacingProps, 'm' | 'mx' | 'my'>,\r\n    Pick<ColorProps, 'c'>,\r\n    IconSizingProps {\r\n  children?: ReactNode;\r\n  component?: ElementType;\r\n  lucideIcon?: any; // For Lucide React icons\r\n}\r\n\r\nexport const Icon = forwardRef<HTMLElement, IconProps>(\r\n  ({ \r\n    children,\r\n    className,\r\n    component = 'span',\r\n    size = 'sm',\r\n    lucideIcon: LucideIcon,\r\n    // Spacing props  \r\n    m, mx, my,\r\n    // Color props\r\n    c = 'foreground',\r\n    ...props \r\n  }, ref) => {\r\n    return (\r\n      <BaseIcon\r\n        ref={ref}\r\n        component={component}\r\n        data-class=\"icon\"\r\n        className={cn(\r\n          // Base icon styles\r\n          'inline-block flex items-center justify-center',\r\n          // Apply CVA variants\r\n          iconSizeVariants({ size }),\r\n          spacingVariants({ m, mx, my }),\r\n          colorVariants({ c }),\r\n          className\r\n        )}\r\n        // prevent non-DOM props leakage\r\n        aria-hidden={props['aria-hidden']}\r\n        role={props.role}\r\n      >\r\n        {LucideIcon ? (\r\n          // Render Lucide icon as child element to avoid prop leakage to DOM\r\n          <span>\r\n            <LucideIcon\r\n              className={cn(\r\n                iconSizeVariants({ size }),\r\n                spacingVariants({ m, mx, my }),\r\n                colorVariants({ c }),\r\n                className\r\n              )}\r\n            />\r\n          </span>\r\n        ) : children}\r\n      </BaseIcon>\r\n    );\r\n  }\r\n);\r\n\r\nIcon.displayName = \"Icon\"; ",
      "target": "components"
    }
  ]
}