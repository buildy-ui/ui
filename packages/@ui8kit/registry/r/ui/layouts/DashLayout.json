{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "DashLayout",
  "type": "registry:layout",
  "description": "import React from \"react\";",
  "dependencies": [
    "lucide-react",
    "react-resizable-panels"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "src/layouts/DashLayout.tsx",
      "content": "//import React from \"react\";\r\nimport { Block, Box, Container, Button, Icon, Text, Group, Stack, Title } from \"../index\";\r\nimport { Atom, Moon, Sun } from \"lucide-react\";\r\nimport { PanelGroup, Panel, PanelResizeHandle } from \"react-resizable-panels\";\r\n\r\n// Sidebar component used by the DashLayout factory\r\nexport interface SidebarProps {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  dataClass?: string;\r\n  title?: string;\r\n}\r\n\r\nexport function Sidebar({ children, className, dataClass, title }: SidebarProps) {\r\n  return (\r\n    <Block component=\"aside\" className={className} data-class={dataClass}>\r\n      <Box p=\"md\">\r\n        <Stack gap=\"md\" data-role=\"dash-sidebar-stack\">\r\n          {title && <Text c=\"muted\">{title}</Text>}\r\n          {children}\r\n        </Stack>\r\n      </Box>\r\n    </Block>\r\n  );\r\n}\r\n\r\n// Minimal Navbar with brand and a single dark-mode toggle button\r\nexport interface NavbarProps {\r\n  isDarkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n  brand?: string;\r\n}\r\n\r\nexport function Navbar({ isDarkMode, toggleDarkMode, brand = \"App\" }: NavbarProps) {\r\n  return (\r\n    <Block component=\"nav\" bg=\"card\" p=\"md\" data-role=\"dash-navbar\">\r\n      <Group justify=\"between\" align=\"center\">\r\n        <Group gap=\"sm\" align=\"center\">\r\n          <Icon component=\"span\" lucideIcon={Atom} c=\"primary\" />\r\n          <Text fw=\"bold\">{brand}</Text>\r\n        </Group>\r\n\r\n        <Button variant=\"ghost\" title=\"Toggle dark mode\" onClick={toggleDarkMode}>\r\n          <Icon component=\"span\" lucideIcon={isDarkMode ? Sun : Moon} />\r\n          <Text size=\"sm\">Theme</Text>\r\n        </Button>\r\n      </Group>\r\n    </Block>\r\n  );\r\n}\r\n\r\n// Dashboard layout composing react-resizable-panels with ui8kit primitives\r\nexport interface DashboardProps {\r\n  /** Optional page component to render in the main panel */\r\n  page?: React.ComponentType;\r\n  /** Optional children to render in the main panel (used if `page` is not provided) */\r\n  children?: React.ReactNode;\r\n  /** Optional sidebar content */\r\n  sidebar?: React.ReactNode;\r\n  /** Navbar props */\r\n  navbarProps?: Omit<NavbarProps, 'toggleDarkMode' | 'isDarkMode'> & Partial<Pick<NavbarProps, 'isDarkMode' | 'toggleDarkMode'>>;\r\n}\r\n\r\nexport function Dashboard({ page: Page, children, sidebar, navbarProps }: DashboardProps) {\r\n  // The Dashboard is intentionally minimal: it composes PanelGroup/Panel/PanelResizeHandle\r\n  // and exposes slots for `Navbar`, `Sidebar` and main content.\r\n  const toggle = typeof navbarProps?.toggleDarkMode === 'function' ? navbarProps.toggleDarkMode : () => {};\r\n  const isDark = navbarProps?.isDarkMode ?? false;\r\n\r\n  return (\r\n    <>\r\n      <Navbar isDarkMode={isDark} toggleDarkMode={toggle} brand={navbarProps?.brand} />\r\n\r\n      <Block component=\"main\" data-role=\"dash-main\" position=\"relative\" w=\"full\">\r\n        <PanelGroup direction=\"horizontal\" autoSaveId=\"dashlayout-panels\">\r\n          <Panel defaultSize={20} minSize={10} maxSize={40}>\r\n            <Sidebar>{sidebar}</Sidebar>\r\n          </Panel>\r\n\r\n          <PanelResizeHandle />\r\n\r\n          <Panel defaultSize={80} minSize={50}>\r\n            <Box p=\"md\">\r\n              <Container>{Page ? <Page /> : children}</Container>\r\n            </Box>\r\n          </Panel>\r\n        </PanelGroup>\r\n      </Block>\r\n    </>\r\n  );\r\n}\r\n\r\n// Default export: factory alias\r\nexport function DashLayout(props: DashboardProps) {\r\n  return <Dashboard {...props} />;\r\n}\r\n\r\n\r\n",
      "target": "layouts"
    }
  ]
}