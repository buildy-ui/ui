{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "Sheet",
  "type": "registry:ui",
  "description": "",
  "dependencies": [
    "react",
    "lucide-react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "src/ui/Sheet/Sheet.tsx",
      "content": "import type { ReactNode, HTMLAttributes } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport { cn, buttonSizeVariants, buttonStyleVariants } from \"@ui8kit/core\";\r\nimport type { ButtonProps } from \"@ui8kit/core\";\r\nimport { Icon } from \"@ui8kit/core\";\r\nimport { Menu } from \"lucide-react\";\r\n\r\nexport interface SheetProps extends HTMLAttributes<HTMLDivElement> {\r\n  id?: string;\r\n  side?: \"left\" | \"right\";\r\n  openLabel?: string;\r\n  closeLabel?: string;\r\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"full\";\r\n  title?: string;\r\n  showTrigger?: boolean;\r\n  triggerIcon?: any;\r\n  triggerVariant?: ButtonProps[\"variant\"];\r\n  triggerSize?: ButtonProps[\"size\"];\r\n  children?: ReactNode;\r\n}\r\n\r\nexport interface SheetTriggerProps extends ButtonProps {\r\n  htmlFor?: string;\r\n}\r\n\r\nexport const SheetTrigger = forwardRef<HTMLButtonElement, SheetTriggerProps>(\r\n\r\n  (\r\n    {\r\n      htmlFor,\r\n      className,\r\n      size = \"sm\",\r\n      variant = \"ghost\",\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <label\r\n        ref={ref as any}\r\n        htmlFor={htmlFor}\r\n        data-class=\"sheet-trigger\"\r\n        className={cn(\r\n          // Base button-like styles\r\n          \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium cursor-pointer\",\r\n          // Apply CVA variants\r\n          buttonSizeVariants({ size }),\r\n          buttonStyleVariants({ variant }),\r\n          className\r\n        )}\r\n        aria-label={props[\"aria-label\"]}\r\n      >\r\n        {props.children}\r\n      </label>\r\n    );\r\n  }\r\n);\r\n\r\nexport const Sheet = forwardRef<HTMLDivElement, SheetProps>(\r\n  (\r\n    {\r\n      id = \"sheet\",\r\n      side = \"right\",\r\n      openLabel = \"Open\",\r\n      closeLabel = \"Close\",\r\n      size = \"md\",\r\n      title,\r\n      showTrigger = true,\r\n      triggerIcon,\r\n      triggerVariant = \"ghost\",\r\n      triggerSize = \"sm\",\r\n      className,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const sidePosition = side === \"left\" ? \"left-0\" : \"right-0\";\r\n    const sideBorder = side === \"left\" ? \"border-r\" : \"border-l\";\r\n    const sizeClass =\r\n      size === \"sm\"\r\n        ? \"w-64\"\r\n        : size === \"md\"\r\n        ? \"w-80\"\r\n        : size === \"lg\"\r\n        ? \"w-96\"\r\n        : size === \"xl\"\r\n        ? \"w-[28rem]\"\r\n        : size === \"2xl\"\r\n        ? \"w-[32rem]\"\r\n        : \"w-full\";\r\n\r\n    return (\r\n      <div ref={ref} className={cn(\"relative\", className)} data-class=\"sheet\" {...props}>\r\n        <input id={id} type=\"checkbox\" className=\"peer hidden\" />\r\n\r\n        {showTrigger && (\r\n          <SheetTrigger htmlFor={id} variant={triggerVariant} size={triggerSize} aria-label={openLabel}>\r\n            <Icon component=\"span\" lucideIcon={triggerIcon || Menu} />\r\n          </SheetTrigger>\r\n        )}\r\n\r\n        <div className=\"fixed inset-0 z-50 hidden peer-checked:block\" data-class=\"sheet-portal\">\r\n          <label\r\n            htmlFor={id}\r\n            aria-label=\"Close overlay\"\r\n            data-class=\"sheet-overlay\"\r\n            className=\"absolute inset-0 bg-card/50 cursor-pointer\"\r\n          />\r\n\r\n          <div\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n            data-class=\"sheet-panel\"\r\n            className={cn(\r\n              \"absolute top-0 h-full max-w-full p-4 bg-card\",\r\n              sidePosition,\r\n              sideBorder,\r\n              \"border-border\",\r\n              sizeClass\r\n            )}\r\n          >\r\n            <div className=\"flex items-center justify-between\" data-class=\"sheet-header\">\r\n              {title ? (\r\n                <span className=\"text-sm text-muted-foreground\" data-class=\"sheet-title\">\r\n                  {title}\r\n                </span>\r\n              ) : (\r\n                <span />\r\n              )}\r\n              <label\r\n                htmlFor={id}\r\n                aria-label={closeLabel}\r\n                data-class=\"sheet-close-button\"\r\n                className=\"inline-flex items-center justify-center h-8 w-8 rounded-md border border-border text-muted-foreground cursor-pointer\"\r\n              >\r\n                âœ•\r\n              </label>\r\n            </div>\r\n            <div className=\"mt-4\" data-class=\"sheet-content\">\r\n              {children}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nSheet.displayName = \"Sheet\";\r\n",
      "target": "ui"
    }
  ]
}