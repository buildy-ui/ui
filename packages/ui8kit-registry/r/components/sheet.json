{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "sheet",
  "type": "registry:component",
  "description": "CSS-only Sheet component for SSR/SSG compatibility\n * \n * Usage example:\n * ```tsx\n * <Sheet>\n *   <SheetTrigger href=\"#my-sheet\">Open Sheet</SheetTrigger>\n *   <SheetContent id=\"my-sheet\">\n *     <SheetHeader>\n *       <SheetTitle>Sheet Title</SheetTitle>\n *       <SheetDescription>Description text</SheetDescription>\n *     </SheetHeader>\n *     <div className=\"p-6\">Content here</div>\n *     <SheetFooter>\n *       <SheetClose>Close</SheetClose>\n *     </SheetFooter>\n *   </SheetContent>\n * </Sheet>\n * ```",
  "dependencies": [
    "react",
    "lucide-react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "utility/components/sheet.tsx",
      "content": "import * as React from \"react\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * CSS-only Sheet component for SSR/SSG compatibility\n * \n * Usage example:\n * ```tsx\n * <Sheet>\n *   <SheetTrigger href=\"#my-sheet\">Open Sheet</SheetTrigger>\n *   <SheetContent id=\"my-sheet\">\n *     <SheetHeader>\n *       <SheetTitle>Sheet Title</SheetTitle>\n *       <SheetDescription>Description text</SheetDescription>\n *     </SheetHeader>\n *     <div className=\"p-6\">Content here</div>\n *     <SheetFooter>\n *       <SheetClose>Close</SheetClose>\n *     </SheetFooter>\n *   </SheetContent>\n * </Sheet>\n * ```\n */\n\n// Layout for sheet with checkbox\ninterface SheetLayoutProps {\n  children: React.ReactNode\n  className?: string\n  trigger?: React.ReactNode\n}\n\nfunction SheetLayout({ trigger, children, className }: SheetLayoutProps) {\n  return (\n    <div className={cn(\"relative\", className)}>\n      <input type=\"checkbox\" id=\"sheet-toggle\" className=\"peer sr-only\" aria-hidden=\"true\" />\n      {trigger}\n      {children}\n    </div>\n  )\n}\n\n// Props interfaces\ninterface SheetTriggerProps {\n  children: React.ReactNode\n  className?: string\n}\n\ninterface SheetContentProps {\n  children: React.ReactNode\n  className?: string\n}\n\n// Trigger component - uses peer checkbox\nfunction SheetTrigger({ children, className, ...props }: SheetTriggerProps) {\n  return (\n    <label htmlFor=\"sheet-toggle\" data-slot=\"sheet-trigger\" className={cn(\"inline-flex md:hidden items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all h-9 p-2 border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground cursor-pointer\", className)} {...props}>\n      {children}\n    </label>\n  )\n}\n\n// Content component - pure CSS off-canvas\n// To change the side from which the panel slides in:\n// For LEFT: use 'inset-y-0 left-0 border-r transform -translate-x-full peer-checked:translate-x-0'\n// For RIGHT: use 'inset-y-0 right-0 border-l transform translate-x-full peer-checked:translate-x-0'\nfunction SheetContent({ children, className, ...props }: SheetContentProps) {\n  // Example usage (choose one line):\n  // LEFT PANEL:  className={cn(\"fixed inset-y-0 left-0 z-50 w-full max-w-sm bg-background shadow-lg border-r transform -translate-x-full transition-transform duration-300 ease-out peer-checked:translate-x-0 flex flex-col overflow-hidden\", className)}\n  // RIGHT PANEL: className={cn(\"fixed inset-y-0 right-0 z-50 w-full max-w-sm bg-background shadow-lg border-l transform translate-x-full transition-transform duration-300 ease-out peer-checked:translate-x-0 flex flex-col overflow-hidden\", className)}\n  return (\n    <div data-slot=\"sheet-content\" role=\"dialog\" aria-modal=\"true\" className={cn(\"fixed inset-y-0 left-0 z-50 w-full max-w-sm bg-background shadow-lg border-r transform -translate-x-full transition-transform duration-300 ease-out peer-checked:translate-x-0 flex flex-col overflow-hidden\", className)} {...props}>\n      {/* Close button */}\n      <div className=\"absolute top-4 right-4 z-10\">\n        <label htmlFor=\"sheet-toggle\" className={cn(\"rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 inline-flex h-6 w-6 items-center justify-center bg-background/80 backdrop-blur-sm cursor-pointer\")}>\n          <XIcon className=\"h-4 w-4\" />\n          <span className=\"sr-only\">Close</span>\n        </label>\n      </div>\n      {children}\n    </div>\n  )\n}\n\n// Overlay component\nfunction SheetOverlay({ className, ...props }: { className?: string }) {\n  return (\n    <label\n      htmlFor=\"sheet-toggle\"\n      data-slot=\"sheet-overlay\"\n      className={cn(\n        \"fixed inset-0 z-40 bg-black/50 backdrop-blur-sm opacity-0 invisible transition-all duration-300 ease-out peer-checked:opacity-100 peer-checked:visible peer-checked:pointer-events-auto transform-gpu cursor-pointer\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\n// Header component\ninterface SheetHeaderProps {\n  children: React.ReactNode\n  className?: string\n}\n\nfunction SheetHeader({ children, className, ...props }: SheetHeaderProps) {\n  return (\n    <div data-slot=\"sheet-header\" className={cn(\"flex flex-col space-y-2 p-6\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\n// Body component for main content\ninterface SheetBodyProps {\n  children: React.ReactNode\n  className?: string\n}\n\nfunction SheetBody({ children, className, ...props }: SheetBodyProps) {\n  return (\n    <div data-slot=\"sheet-body\" className={cn(\"flex-1 overflow-y-auto p-6\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\n// Footer component\ninterface SheetFooterProps {\n  children: React.ReactNode\n  className?: string\n}\n\nfunction SheetFooter({ children, className, ...props }: SheetFooterProps) {\n  return (\n    <div data-slot=\"sheet-footer\" className={cn(\"mt-auto flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2 p-6\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\n// Title component\ninterface SheetTitleProps {\n  children: React.ReactNode\n  className?: string\n}\n\nfunction SheetTitle({ children, className, ...props }: SheetTitleProps) {\n  return (\n    <h2 data-slot=\"sheet-title\" className={cn(\"text-lg font-semibold text-foreground\", className)} {...props}>\n      {children}\n    </h2>\n  )\n}\n\n// Description component\ninterface SheetDescriptionProps {\n  children: React.ReactNode\n  className?: string\n}\n\nfunction SheetDescription({ children, className, ...props }: SheetDescriptionProps) {\n  return (\n    <p data-slot=\"sheet-description\" className={cn(\"text-sm text-muted-foreground\", className)} {...props}>\n      {children}\n    </p>\n  )\n}\n\n// Close component - simple link to close\ninterface SheetCloseProps {\n  children: React.ReactNode\n  className?: string\n}\n\nfunction SheetClose({ children, className, ...props }: SheetCloseProps) {\n  return (\n    <label htmlFor=\"sheet-toggle\" data-slot=\"sheet-close\" className={cn(\"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring cursor-pointer\", className)} {...props}>\n      {children}\n    </label>\n  )\n}\n\nexport {\n  SheetLayout,\n  SheetTrigger,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n  SheetClose,\n  SheetBody,\n  SheetOverlay,\n}",
      "target": "components"
    }
  ]
}