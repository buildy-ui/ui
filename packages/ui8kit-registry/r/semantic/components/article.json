{
  "$schema": "https://buildy.tw/schema/registry-item.json",
  "name": "article",
  "type": "registry:component",
  "description": "Helper function for determining styles that the parser will be able to process",
  "dependencies": [
    "react"
  ],
  "devDependencies": [],
  "files": [
    {
      "path": "semantic/components/article.tsx",
      "content": "import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ntype ElementType = \"article\" | \"div\" | \"li\" | \"section\";\n\n// Helper function for determining styles that the parser will be able to process\nfunction ArticleBase({\n  className,\n  ...props\n}: React.ComponentProps<\"article\">) {\n  return (\n    <article\n\n      className={cn(\"article\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\n// Main component with polymorphism support\ntype BaseProps<T extends ElementType = \"article\"> = {\n  as?: T;\n  className?: string;\n  children: React.ReactNode;\n} & React.ComponentPropsWithoutRef<T>;\n\nfunction Article<T extends ElementType = \"article\">({\n  as,\n  className,\n  children,\n  ...props\n}: BaseProps<T>) {\n  const Component = as || \"article\";\n\n  if (Component === \"article\") {\n    return (\n      <ArticleBase className={className} {...props}>\n        {children}\n      </ArticleBase>);\n\n  }\n\n  return React.createElement(\n    Component,\n    {\n      \"data-slot\": \"article\",\n      className: cn(\"article\", className),\n      ...props\n    },\n    children\n  );\n}\n\nfunction ArticleHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"header\">) {\n  return (\n    <header\n\n      className={cn(\"article-header\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleTitle({\n  className,\n  ...props\n}: React.ComponentProps<\"h3\">) {\n  return (\n    <h3\n\n      className={cn(\"article-title\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleMeta({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"article-meta\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleTime({\n  className,\n  ...props\n}: React.ComponentProps<\"time\">) {\n  return (\n    <time\n\n      className={cn(\"article-time\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleAuthor({\n  className,\n  ...props\n}: React.ComponentProps<\"address\">) {\n  return (\n    <address\n\n      className={cn(\"article-author\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleFigure({\n  className,\n  ...props\n}: React.ComponentProps<\"figure\">) {\n  return (\n    <figure\n\n      className={cn(\"article-figure\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleImage({\n  className,\n  ...props\n}: React.ComponentProps<\"img\">) {\n  return (\n    <img\n\n      className={cn(\"article-image\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleFigcaption({\n  className,\n  ...props\n}: React.ComponentProps<\"figcaption\">) {\n  return (\n    <figcaption\n\n      className={cn(\"article-figcaption\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"article-content\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleBlockquote({\n  className,\n  ...props\n}: React.ComponentProps<\"blockquote\">) {\n  return (\n    <blockquote\n\n      className={cn(\"article-blockquote\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"footer\">) {\n  return (\n    <footer\n\n      className={cn(\"article-footer\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleTags({\n  className,\n  ...props\n}: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n\n      className={cn(\"article-tags\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleTag({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n\n      className={cn(\"article-tag\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nfunction ArticleActions({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n\n      className={cn(\"article-actions\",\n\n      className\n      )}\n      {...props} />);\n\n\n}\n\nArticle.displayName = \"Article\";\n\nexport {\n  Article,\n  ArticleHeader,\n  ArticleTitle,\n  ArticleMeta,\n  ArticleTime,\n  ArticleAuthor,\n  ArticleFigure,\n  ArticleImage,\n  ArticleFigcaption,\n  ArticleContent,\n  ArticleBlockquote,\n  ArticleFooter,\n  ArticleTags,\n  ArticleTag,\n  ArticleActions };",
      "target": "components"
    }
  ]
}